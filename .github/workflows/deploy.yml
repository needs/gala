name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npx nx run-many -t lint --parallel=3

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Proxy database
        run: |
          flyctl proxy 5434:5432 --app tgymfr-postgres &

      # Migrate database before building because the building process expects the
      # database to be up-to-date.
      - name: Migrate database
        run: |
          npx nx run-many -t prisma-deploy --parallel=3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_POSTGRES }}

      - name: Prisma Generate
        run: npx nx run-many -t prisma-generate --parallel=3

      - name: Build
        run: npx nx run-many -t build --parallel=3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_FIREBASE_CONFIG: ${{ vars.NEXT_PUBLIC_FIREBASE_CONFIG }}
          NEXT_PUBLIC_HOCUSPOCUS_URL: ${{ vars.NEXT_PUBLIC_HOCUSPOCUS_URL }}

      - name: Test
        run: npx nx run-many -t test --runInBand

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  deploy-app:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy app
        run: flyctl deploy --config apps/app/fly.toml --dockerfile apps/app/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_APP }}

  deploy-website:
    name: Deploy website
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy website
        run: flyctl deploy --config apps/website/fly.toml --dockerfile apps/website/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_WEBSITE }}

  deploy-hocuspocus:
    name: Deploy hocuspocus
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy hocuspocus
        run: flyctl deploy --config apps/hocuspocus/fly.toml --dockerfile apps/hocuspocus/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_HOCUSPOCUS }}
